.PHONY: default
default: build

#################
.PHONY: all-setup
all-setup: build container create-cluster deploy-gateway-api kind-load-image deploy-istio deploy-controller deploy-contour deploy-controller-gatewayclass deploy-test-app

#################

ifeq ($(GATEWAY_API_VERSION),)
GATEWAY_API_VERSION=v0.5.1
endif

.PHONY: gateway-api-upstream-get
gateway-api-upstream-get:
	mkdir -p upstream-gateway-api-crds upstream-gateway-api-webhook
	#kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=$(GATEWAY_API_VERSION)" > upstream-gateway-api-crds/crds.yaml
	kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd/experimental?ref=$(GATEWAY_API_VERSION)" > upstream-gateway-api-crds/crds.yaml
	(cd upstream-gateway-api-webhook && for manifestfile in 0-namespace.yaml admission_webhook.yaml certificate_config.yaml; do curl -sL -O https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/config/webhook/$$manifestfile; done)

.PHONY: deploy-gateway-api
deploy-gateway-api:
	kubectl apply -f upstream-gateway-api-crds
	kubectl apply -f upstream-gateway-api-webhook

#################
.PHONY: deploy-contour
deploy-contour:
	helm repo add bitnami https://charts.bitnami.com/bitnami
	helm repo update
	kubectl create namespace projectcontour
	helm install my-release bitnami/contour --namespace projectcontour

# To allow contour to provision from gateway resources
.PHONY: deploy-contour-provisioner
deploy-contour-provisioner:
	kubectl apply -f https://projectcontour.io/quickstart/contour-gateway-provisioner.yaml
	kubectl apply -f test-data/contour-gatewayclass.yaml

#################
.PHONY: create-cluster
create-cluster:
	kind create cluster --config test-data/kind-config.yaml

.PHONY: delete-cluster
delete-cluster:
	kind delete cluster

.PHONY: kind-load-image
kind-load-image:
	kind load docker-image ghcr.io/pixelperfekt-dk/cloud-gateway-controller:$(VERSION)__linux_amd64

.PHONY: kind-list-images
kind-list-images:
	docker exec -it kind-control-plane crictl images

#################
.PHONY: deploy-istio
deploy-istio:
	helm repo add istio https://istio-release.storage.googleapis.com/charts
	helm repo update
	kubectl create namespace istio-system
	helm install istio-base istio/base -n istio-system
	helm install istiod istio/istiod -n istio-system

#################
.PHONY: deploy-controller
deploy-controller:
	helm upgrade -i cloud-gateway-controller charts/cloud-gateway-controller --set image.tag=$(VERSION)__linux_amd64 --set image.repository=ghcr.io/pixelperfekt-dk/cloud-gateway-controller

.PHONY: undeploy-controller
undeploy-controller:
	helm uninstall cloud-gateway-controller

.PHONY: controller-redeploy
controller-redeploy: undeploy-controller deploy-controller

.PHONY: controller-rebuild-redeploy
controller-rebuild-redeploy: build container kind-load-image
	kubectl rollout restart deploy cloud-gateway-controller

.PHONY: deploy-controller-gatewayclass
deploy-controller-gatewayclass:
	kubectl apply -f test-data/gateway-class.yaml

#################
.PHONY: deploy-test-app
deploy-test-app:
	helm template foo gateway-api --repo https://pixelperfekt-dk.github.io/helm-charts --version 0.2.6 --values test-data/user-gateway-values.yaml | kubectl apply -f -
	kubectl apply -f test-data/test-app.yaml
